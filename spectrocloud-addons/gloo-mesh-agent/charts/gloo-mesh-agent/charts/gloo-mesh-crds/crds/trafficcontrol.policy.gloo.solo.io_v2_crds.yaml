# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: fd3e891b08a906f6
    crd.solo.io/version: 2.0.0
  labels:
    app: gloo-mesh-crds
    app.kubernetes.io/name: gloo-mesh-crds
  name: mirrorpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    kind: MirrorPolicy
    listKind: MirrorPolicyList
    plural: mirrorpolicies
    singular: mirrorpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              MirrorPolicy is used to mirror/shadow traffic to a another destination (traffic will be sent to its original destination in addition to the mirrored destinations).
              MirrorPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            Not required if the Destination only exposes a single port.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the Mirror policy to apply to the selected
                  routes
                properties:
                  destination:
                    description: The destination to which to send mirrored traffic
                    properties:
                      kind:
                        description: the kind of destination being selected. defaults
                          to Kubernetes Service.
                        enum:
                        - SERVICE
                        - VIRTUAL_DESTINATION
                        - EXTERNAL_SERVICE
                        type: string
                      port:
                        description: the port on the destination object being targeted.
                          required if the object provides more than one port.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - number
                            - required:
                              - name
                        - required:
                          - number
                        - required:
                          - name
                        properties:
                          name:
                            description: the name of the port on the destination objects
                              being targeted.
                            type: string
                          number:
                            description: the number of the port on the destination
                              objects being targeted.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      ref:
                        description: reference to the destination object by its metadata
                        properties:
                          cluster:
                            description: the cluster of the object. if the field is
                              omitted, Gloo Mesh will attempt to use the same cluster
                              as the parent object containing this reference.
                            type: string
                          name:
                            description: the name of the object
                            type: string
                          namespace:
                            description: the namespace of the object. if the field
                              is omitted, Gloo Mesh will attempt to use the same namespace
                              as the parent object containing this reference.
                            type: string
                        type: object
                      subset:
                        additionalProperties:
                          type: string
                        description: select a subset of the destination's endpoints
                          for routing based on their labels.
                        type: object
                      weight:
                        description: |-
                          Specify the proportion of traffic to be forwarded to this destination.
                          Weights across all of the `destinations` must sum to 100.
                          Weight is only relevant when used in the context of a route with multiple destinations.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  percentage:
                    description: Percentage of traffic to mirror. If omitted all traffic
                      will be mirrored. Values must be between 0 and 100.
                    nullable: true
                    type: number
                type: object
            type: object
          status:
            description: reflects the status of the MirrorPolicy
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the object's metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this object.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: d73d7cc202df9e8e
    crd.solo.io/version: 2.0.0
  labels:
    app: gloo-mesh-crds
    app.kubernetes.io/name: gloo-mesh-crds
  name: ratelimitpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    kind: RateLimitPolicy
    listKind: RateLimitPolicyList
    plural: ratelimitpolicies
    singular: ratelimitpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitPolicy is used to assign ratelimit configuration to specific routes or destinations.
              Traffic is forwarded to a rate-limited destinations specified in the RatelimitServerSettings.
              The RatelimitServerSettings is also used to configure connecting settings.
              If this is not provided, the default connection settings and default gloo mesh ratelimiter server destination will be used.
              RateLimitPolicies are applied at the *Route* level and *Destination* levels.
              Default is to apply policy to all destinations.
            properties:
              applyToDestinations:
                description: |-
                  Select the destinations where the policy will be applied.
                  Default behavior if no selectors are specified is to apply to all destinations in the workspace.
                  If left empty and the route selector is set, no ratelimits on destinations will be applied.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: |-
                        the port on the Destination which receives traffic.
                        Not required if the Destination only exposes a single port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: selector used to match destination objects by their
                        metadata
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              applyToRoutes:
                description: |-
                  Select the routes where the policy will be applied.
                  If left empty, no ratelimits on routes will be applied in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            Not required if the Destination only exposes a single port.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The configuration details of the rate limit policy to
                  apply to the selected routes
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - raw
                    - required:
                      - ratelimitClientConfig
                - required:
                  - raw
                - required:
                  - ratelimitClientConfig
                properties:
                  ratelimitClientConfig:
                    description: Select a RatelimitClientConfig policy to apply.
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will attempt to use the same cluster as the parent
                          object containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will attempt to use the same namespace
                          as the parent object containing this reference.
                        type: string
                    type: object
                  ratelimitServerConfig:
                    description: |-
                      Reference to the RatelimitServerConfig to use for this policy.
                      If none is provided, no ratelimit will be enforced
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will attempt to use the same cluster as the parent
                          object containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will attempt to use the same namespace
                          as the parent object containing this reference.
                        type: string
                    type: object
                  raw:
                    description: Inline a policy using the raw configuration format
                      used by the ratelimit server.
                    properties:
                      rateLimits:
                        description: |-
                          Actions specify how the client (Envoy) will compose the descriptors that
                          will be sent to the server to make a rate limiting decision.
                        items:
                          properties:
                            actions:
                              items:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - sourceCluster
                                    - required:
                                      - destinationCluster
                                    - required:
                                      - requestHeaders
                                    - required:
                                      - remoteAddress
                                    - required:
                                      - genericKey
                                    - required:
                                      - headerValueMatch
                                    - required:
                                      - metadata
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                                properties:
                                  destinationCluster:
                                    description: Rate limit on destination cluster.
                                    type: object
                                  genericKey:
                                    description: Rate limit on a generic key.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                    type: object
                                  headerValueMatch:
                                    description: Rate limit on the existence of request
                                      headers.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                      expectMatch:
                                        description: |-
                                          If set to true, the action will append a descriptor entry when the
                                          request matches the headers. If set to false, the action will append a
                                          descriptor entry when the request does not match the headers. The
                                          default value is true.
                                        nullable: true
                                        type: boolean
                                      headers:
                                        description: |-
                                          Specifies a set of headers that the rate limit action should match
                                          on. The action will check the request’s headers against all the
                                          specified headers in the config. A match will happen if all the
                                          headers in the config are present in the request with the same values
                                          (or based on presence if the value field is not in the config).
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - exactMatch
                                              - required:
                                                - regexMatch
                                              - required:
                                                - rangeMatch
                                              - required:
                                                - presentMatch
                                              - required:
                                                - prefixMatch
                                              - required:
                                                - suffixMatch
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                          properties:
                                            exactMatch:
                                              description: If specified, header match
                                                will be performed based on the value
                                                of the header.
                                              type: string
                                            invertMatch:
                                              description: |-
                                                If specified, the match result will be inverted before checking. Defaults to false.

                                                Examples:

                                                * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                                * The range [-10,0) will match the value -1, so it will not match when inverted.
                                              type: boolean
                                            name:
                                              description: Specifies the name of the
                                                header in the request.
                                              type: string
                                            prefixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the prefix of the header value.
                                                Note: empty prefix is not allowed, please use present_match instead.

                                                Examples:

                                                * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                              type: string
                                            presentMatch:
                                              description: |-
                                                If specified, header match will be performed based on whether the header is in the
                                                request.
                                              type: boolean
                                            rangeMatch:
                                              description: |-
                                                If specified, header match will be performed based on range.
                                                The rule will match if the request header value is within this range.
                                                The entire request header value must represent an integer in base 10 notation: consisting of
                                                an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                                the header value does not represent an integer. Match will fail for empty values, floating
                                                point numbers or if only a subsequence of the header value is an integer.

                                                Examples:

                                                * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                                  "-1somestring"
                                              properties:
                                                end:
                                                  description: end of the range (exclusive)
                                                  format: int64
                                                  type: integer
                                                start:
                                                  description: start of the range
                                                    (inclusive)
                                                  format: int64
                                                  type: integer
                                              type: object
                                            regexMatch:
                                              description: |-
                                                If specified, this regex string is a regular expression rule which implies the entire request
                                                header value must match the regex. The rule will not match if only a subsequence of the
                                                request header value matches the regex. The regex grammar used in the value field is defined
                                                `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                                Examples:

                                                * The regex *\d{3}* matches the value *123*
                                                * The regex *\d{3}* does not match the value *1234*
                                                * The regex *\d{3}* does not match the value *123.456*
                                              type: string
                                            suffixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the suffix of the header value.
                                                Note: empty suffix is not allowed, please use present_match instead.

                                                Examples:

                                                * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  metadata:
                                    description: Rate limit on metadata.
                                    properties:
                                      defaultValue:
                                        description: |-
                                          An optional value to use if *metadata_key* is empty. If not set and
                                          no value is present under the metadata_key then no descriptor is generated.
                                        type: string
                                      descriptorKey:
                                        description: Required. The key to use in the
                                          descriptor entry.
                                        type: string
                                      metadataKey:
                                        description: |-
                                          Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                          only happen if the value in the metadata is of type string.
                                        properties:
                                          key:
                                            description: |-
                                              Required. The key name of Metadata to retrieve the Struct from the metadata.
                                              Typically, it represents a builtin subsystem or custom extension.
                                            type: string
                                          path:
                                            description: |-
                                              Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                              e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                              which depends on the particular scenario.

                                              Note: Due to that only the key type segment is supported, the path can not specify a list
                                              unless the list is the last segment.
                                            items:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - key
                                              - required:
                                                - key
                                              properties:
                                                key:
                                                  description: Required. If specified,
                                                    use the key to retrieve the value
                                                    in a Struct.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      source:
                                        description: Source of metadata
                                        enum:
                                        - DYNAMIC
                                        - ROUTE_ENTRY
                                        type: string
                                    type: object
                                  remoteAddress:
                                    description: Rate limit on remote address.
                                    type: object
                                  requestHeaders:
                                    description: Rate limit on request headers.
                                    properties:
                                      descriptorKey:
                                        description: The key to use in the descriptor
                                          entry.
                                        type: string
                                      headerName:
                                        description: |-
                                          The header name to be queried from the request headers. The header’s
                                          value is used to populate the value of the descriptor entry for the
                                          descriptor_key.
                                        type: string
                                    type: object
                                  sourceCluster:
                                    description: Rate limit on source cluster.
                                    type: object
                                type: object
                              type: array
                            setActions:
                              items:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - sourceCluster
                                    - required:
                                      - destinationCluster
                                    - required:
                                      - requestHeaders
                                    - required:
                                      - remoteAddress
                                    - required:
                                      - genericKey
                                    - required:
                                      - headerValueMatch
                                    - required:
                                      - metadata
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                                properties:
                                  destinationCluster:
                                    description: Rate limit on destination cluster.
                                    type: object
                                  genericKey:
                                    description: Rate limit on a generic key.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                    type: object
                                  headerValueMatch:
                                    description: Rate limit on the existence of request
                                      headers.
                                    properties:
                                      descriptorValue:
                                        description: The value to use in the descriptor
                                          entry.
                                        type: string
                                      expectMatch:
                                        description: |-
                                          If set to true, the action will append a descriptor entry when the
                                          request matches the headers. If set to false, the action will append a
                                          descriptor entry when the request does not match the headers. The
                                          default value is true.
                                        nullable: true
                                        type: boolean
                                      headers:
                                        description: |-
                                          Specifies a set of headers that the rate limit action should match
                                          on. The action will check the request’s headers against all the
                                          specified headers in the config. A match will happen if all the
                                          headers in the config are present in the request with the same values
                                          (or based on presence if the value field is not in the config).
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - exactMatch
                                              - required:
                                                - regexMatch
                                              - required:
                                                - rangeMatch
                                              - required:
                                                - presentMatch
                                              - required:
                                                - prefixMatch
                                              - required:
                                                - suffixMatch
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                          properties:
                                            exactMatch:
                                              description: If specified, header match
                                                will be performed based on the value
                                                of the header.
                                              type: string
                                            invertMatch:
                                              description: |-
                                                If specified, the match result will be inverted before checking. Defaults to false.

                                                Examples:

                                                * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                                * The range [-10,0) will match the value -1, so it will not match when inverted.
                                              type: boolean
                                            name:
                                              description: Specifies the name of the
                                                header in the request.
                                              type: string
                                            prefixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the prefix of the header value.
                                                Note: empty prefix is not allowed, please use present_match instead.

                                                Examples:

                                                * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                              type: string
                                            presentMatch:
                                              description: |-
                                                If specified, header match will be performed based on whether the header is in the
                                                request.
                                              type: boolean
                                            rangeMatch:
                                              description: |-
                                                If specified, header match will be performed based on range.
                                                The rule will match if the request header value is within this range.
                                                The entire request header value must represent an integer in base 10 notation: consisting of
                                                an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                                the header value does not represent an integer. Match will fail for empty values, floating
                                                point numbers or if only a subsequence of the header value is an integer.

                                                Examples:

                                                * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                                  "-1somestring"
                                              properties:
                                                end:
                                                  description: end of the range (exclusive)
                                                  format: int64
                                                  type: integer
                                                start:
                                                  description: start of the range
                                                    (inclusive)
                                                  format: int64
                                                  type: integer
                                              type: object
                                            regexMatch:
                                              description: |-
                                                If specified, this regex string is a regular expression rule which implies the entire request
                                                header value must match the regex. The rule will not match if only a subsequence of the
                                                request header value matches the regex. The regex grammar used in the value field is defined
                                                `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                                Examples:

                                                * The regex *\d{3}* matches the value *123*
                                                * The regex *\d{3}* does not match the value *1234*
                                                * The regex *\d{3}* does not match the value *123.456*
                                              type: string
                                            suffixMatch:
                                              description: |-
                                                If specified, header match will be performed based on the suffix of the header value.
                                                Note: empty suffix is not allowed, please use present_match instead.

                                                Examples:

                                                * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  metadata:
                                    description: Rate limit on metadata.
                                    properties:
                                      defaultValue:
                                        description: |-
                                          An optional value to use if *metadata_key* is empty. If not set and
                                          no value is present under the metadata_key then no descriptor is generated.
                                        type: string
                                      descriptorKey:
                                        description: Required. The key to use in the
                                          descriptor entry.
                                        type: string
                                      metadataKey:
                                        description: |-
                                          Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                          only happen if the value in the metadata is of type string.
                                        properties:
                                          key:
                                            description: |-
                                              Required. The key name of Metadata to retrieve the Struct from the metadata.
                                              Typically, it represents a builtin subsystem or custom extension.
                                            type: string
                                          path:
                                            description: |-
                                              Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                              e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                              which depends on the particular scenario.

                                              Note: Due to that only the key type segment is supported, the path can not specify a list
                                              unless the list is the last segment.
                                            items:
                                              oneOf:
                                              - not:
                                                  anyOf:
                                                  - required:
                                                    - key
                                              - required:
                                                - key
                                              properties:
                                                key:
                                                  description: Required. If specified,
                                                    use the key to retrieve the value
                                                    in a Struct.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      source:
                                        description: Source of metadata
                                        enum:
                                        - DYNAMIC
                                        - ROUTE_ENTRY
                                        type: string
                                    type: object
                                  remoteAddress:
                                    description: Rate limit on remote address.
                                    type: object
                                  requestHeaders:
                                    description: Rate limit on request headers.
                                    properties:
                                      descriptorKey:
                                        description: The key to use in the descriptor
                                          entry.
                                        type: string
                                      headerName:
                                        description: |-
                                          The header name to be queried from the request headers. The header’s
                                          value is used to populate the value of the descriptor entry for the
                                          descriptor_key.
                                        type: string
                                    type: object
                                  sourceCluster:
                                    description: Rate limit on source cluster.
                                    type: object
                                type: object
                              type: array
                          type: object
                        type: array
                    type: object
                  serverSettings:
                    description: |-
                      Reference to the RatelimitServerSettings to use for this policy.
                      Currently routes on a single VirtualGateway or destination must share a single RatelimitServerSettings.
                      If none is provided, the default Gloo RatelimitServerSettings will be used.
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will attempt to use the same cluster as the parent
                          object containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will attempt to use the same namespace
                          as the parent object containing this reference.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: Reflects the status of the RateLimitPolicy
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the object's metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this object.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 86a05c198eb21a1d
    crd.solo.io/version: 2.0.0
  labels:
    app: gloo-mesh-crds
    app.kubernetes.io/name: gloo-mesh-crds
  name: ratelimitclientconfigs.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    kind: RateLimitClientConfig
    listKind: RateLimitClientConfigList
    plural: ratelimitclientconfigs
    singular: ratelimitclientconfig
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitClientConfig is used to configure the ratelimit rules on routes/destinations.
              All RateLimitPolicy resources in a workspace require an RateLimitClientConfig to in order to function.
              If no RateLimitClientConfig is provided, no ratelimit rules will be enforced.
            oneOf:
            - not:
                anyOf:
                - required:
                  - raw
            - required:
              - raw
            properties:
              raw:
                description: Define a policy using the raw configuration format used
                  by the client (Envoy).
                properties:
                  rateLimits:
                    description: |-
                      Actions specify how the client (Envoy) will compose the descriptors that
                      will be sent to the server to make a rate limiting decision.
                    items:
                      properties:
                        actions:
                          items:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                            - required:
                              - sourceCluster
                            - required:
                              - destinationCluster
                            - required:
                              - requestHeaders
                            - required:
                              - remoteAddress
                            - required:
                              - genericKey
                            - required:
                              - headerValueMatch
                            - required:
                              - metadata
                            properties:
                              destinationCluster:
                                description: Rate limit on destination cluster.
                                type: object
                              genericKey:
                                description: Rate limit on a generic key.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor
                                      entry.
                                    type: string
                                type: object
                              headerValueMatch:
                                description: Rate limit on the existence of request
                                  headers.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor
                                      entry.
                                    type: string
                                  expectMatch:
                                    description: |-
                                      If set to true, the action will append a descriptor entry when the
                                      request matches the headers. If set to false, the action will append a
                                      descriptor entry when the request does not match the headers. The
                                      default value is true.
                                    nullable: true
                                    type: boolean
                                  headers:
                                    description: |-
                                      Specifies a set of headers that the rate limit action should match
                                      on. The action will check the request’s headers against all the
                                      specified headers in the config. A match will happen if all the
                                      headers in the config are present in the request with the same values
                                      (or based on presence if the value field is not in the config).
                                    items:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                      - required:
                                        - exactMatch
                                      - required:
                                        - regexMatch
                                      - required:
                                        - rangeMatch
                                      - required:
                                        - presentMatch
                                      - required:
                                        - prefixMatch
                                      - required:
                                        - suffixMatch
                                      properties:
                                        exactMatch:
                                          description: If specified, header match
                                            will be performed based on the value of
                                            the header.
                                          type: string
                                        invertMatch:
                                          description: |-
                                            If specified, the match result will be inverted before checking. Defaults to false.

                                            Examples:

                                            * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                            * The range [-10,0) will match the value -1, so it will not match when inverted.
                                          type: boolean
                                        name:
                                          description: Specifies the name of the header
                                            in the request.
                                          type: string
                                        prefixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the prefix of the header value.
                                            Note: empty prefix is not allowed, please use present_match instead.

                                            Examples:

                                            * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                          type: string
                                        presentMatch:
                                          description: |-
                                            If specified, header match will be performed based on whether the header is in the
                                            request.
                                          type: boolean
                                        rangeMatch:
                                          description: |-
                                            If specified, header match will be performed based on range.
                                            The rule will match if the request header value is within this range.
                                            The entire request header value must represent an integer in base 10 notation: consisting of
                                            an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                            the header value does not represent an integer. Match will fail for empty values, floating
                                            point numbers or if only a subsequence of the header value is an integer.

                                            Examples:

                                            * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                              "-1somestring"
                                          properties:
                                            end:
                                              description: end of the range (exclusive)
                                              format: int64
                                              type: integer
                                            start:
                                              description: start of the range (inclusive)
                                              format: int64
                                              type: integer
                                          type: object
                                        regexMatch:
                                          description: |-
                                            If specified, this regex string is a regular expression rule which implies the entire request
                                            header value must match the regex. The rule will not match if only a subsequence of the
                                            request header value matches the regex. The regex grammar used in the value field is defined
                                            `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                            Examples:

                                            * The regex *\d{3}* matches the value *123*
                                            * The regex *\d{3}* does not match the value *1234*
                                            * The regex *\d{3}* does not match the value *123.456*
                                          type: string
                                        suffixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the suffix of the header value.
                                            Note: empty suffix is not allowed, please use present_match instead.

                                            Examples:

                                            * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              metadata:
                                description: Rate limit on metadata.
                                properties:
                                  defaultValue:
                                    description: |-
                                      An optional value to use if *metadata_key* is empty. If not set and
                                      no value is present under the metadata_key then no descriptor is generated.
                                    type: string
                                  descriptorKey:
                                    description: Required. The key to use in the descriptor
                                      entry.
                                    type: string
                                  metadataKey:
                                    description: |-
                                      Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                      only happen if the value in the metadata is of type string.
                                    properties:
                                      key:
                                        description: |-
                                          Required. The key name of Metadata to retrieve the Struct from the metadata.
                                          Typically, it represents a builtin subsystem or custom extension.
                                        type: string
                                      path:
                                        description: |-
                                          Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                          e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                          which depends on the particular scenario.

                                          Note: Due to that only the key type segment is supported, the path can not specify a list
                                          unless the list is the last segment.
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - key
                                          - required:
                                            - key
                                          properties:
                                            key:
                                              description: Required. If specified,
                                                use the key to retrieve the value
                                                in a Struct.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  source:
                                    description: Source of metadata
                                    enum:
                                    - DYNAMIC
                                    - ROUTE_ENTRY
                                    type: string
                                type: object
                              remoteAddress:
                                description: Rate limit on remote address.
                                type: object
                              requestHeaders:
                                description: Rate limit on request headers.
                                properties:
                                  descriptorKey:
                                    description: The key to use in the descriptor
                                      entry.
                                    type: string
                                  headerName:
                                    description: |-
                                      The header name to be queried from the request headers. The header’s
                                      value is used to populate the value of the descriptor entry for the
                                      descriptor_key.
                                    type: string
                                type: object
                              sourceCluster:
                                description: Rate limit on source cluster.
                                type: object
                            type: object
                          type: array
                        setActions:
                          items:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - sourceCluster
                                - required:
                                  - destinationCluster
                                - required:
                                  - requestHeaders
                                - required:
                                  - remoteAddress
                                - required:
                                  - genericKey
                                - required:
                                  - headerValueMatch
                                - required:
                                  - metadata
                            - required:
                              - sourceCluster
                            - required:
                              - destinationCluster
                            - required:
                              - requestHeaders
                            - required:
                              - remoteAddress
                            - required:
                              - genericKey
                            - required:
                              - headerValueMatch
                            - required:
                              - metadata
                            properties:
                              destinationCluster:
                                description: Rate limit on destination cluster.
                                type: object
                              genericKey:
                                description: Rate limit on a generic key.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor
                                      entry.
                                    type: string
                                type: object
                              headerValueMatch:
                                description: Rate limit on the existence of request
                                  headers.
                                properties:
                                  descriptorValue:
                                    description: The value to use in the descriptor
                                      entry.
                                    type: string
                                  expectMatch:
                                    description: |-
                                      If set to true, the action will append a descriptor entry when the
                                      request matches the headers. If set to false, the action will append a
                                      descriptor entry when the request does not match the headers. The
                                      default value is true.
                                    nullable: true
                                    type: boolean
                                  headers:
                                    description: |-
                                      Specifies a set of headers that the rate limit action should match
                                      on. The action will check the request’s headers against all the
                                      specified headers in the config. A match will happen if all the
                                      headers in the config are present in the request with the same values
                                      (or based on presence if the value field is not in the config).
                                    items:
                                      oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - exactMatch
                                          - required:
                                            - regexMatch
                                          - required:
                                            - rangeMatch
                                          - required:
                                            - presentMatch
                                          - required:
                                            - prefixMatch
                                          - required:
                                            - suffixMatch
                                      - required:
                                        - exactMatch
                                      - required:
                                        - regexMatch
                                      - required:
                                        - rangeMatch
                                      - required:
                                        - presentMatch
                                      - required:
                                        - prefixMatch
                                      - required:
                                        - suffixMatch
                                      properties:
                                        exactMatch:
                                          description: If specified, header match
                                            will be performed based on the value of
                                            the header.
                                          type: string
                                        invertMatch:
                                          description: |-
                                            If specified, the match result will be inverted before checking. Defaults to false.

                                            Examples:

                                            * The regex *\d{3}* does not match the value *1234*, so it will match when inverted.
                                            * The range [-10,0) will match the value -1, so it will not match when inverted.
                                          type: boolean
                                        name:
                                          description: Specifies the name of the header
                                            in the request.
                                          type: string
                                        prefixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the prefix of the header value.
                                            Note: empty prefix is not allowed, please use present_match instead.

                                            Examples:

                                            * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.
                                          type: string
                                        presentMatch:
                                          description: |-
                                            If specified, header match will be performed based on whether the header is in the
                                            request.
                                          type: boolean
                                        rangeMatch:
                                          description: |-
                                            If specified, header match will be performed based on range.
                                            The rule will match if the request header value is within this range.
                                            The entire request header value must represent an integer in base 10 notation: consisting of
                                            an optional plus or minus sign followed by a sequence of digits. The rule will not match if
                                            the header value does not represent an integer. Match will fail for empty values, floating
                                            point numbers or if only a subsequence of the header value is an integer.

                                            Examples:

                                            * For range [-10,0), route will match for header value -1, but not for 0, "somestring", 10.9,
                                              "-1somestring"
                                          properties:
                                            end:
                                              description: end of the range (exclusive)
                                              format: int64
                                              type: integer
                                            start:
                                              description: start of the range (inclusive)
                                              format: int64
                                              type: integer
                                          type: object
                                        regexMatch:
                                          description: |-
                                            If specified, this regex string is a regular expression rule which implies the entire request
                                            header value must match the regex. The rule will not match if only a subsequence of the
                                            request header value matches the regex. The regex grammar used in the value field is defined
                                            `(here)[https://en.cppreference.com/w/cpp/regex/ecmascript]`.

                                            Examples:

                                            * The regex *\d{3}* matches the value *123*
                                            * The regex *\d{3}* does not match the value *1234*
                                            * The regex *\d{3}* does not match the value *123.456*
                                          type: string
                                        suffixMatch:
                                          description: |-
                                            If specified, header match will be performed based on the suffix of the header value.
                                            Note: empty suffix is not allowed, please use present_match instead.

                                            Examples:

                                            * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              metadata:
                                description: Rate limit on metadata.
                                properties:
                                  defaultValue:
                                    description: |-
                                      An optional value to use if *metadata_key* is empty. If not set and
                                      no value is present under the metadata_key then no descriptor is generated.
                                    type: string
                                  descriptorKey:
                                    description: Required. The key to use in the descriptor
                                      entry.
                                    type: string
                                  metadataKey:
                                    description: |-
                                      Required. Metadata struct that defines the key and path to retrieve the string value. A match will
                                      only happen if the value in the metadata is of type string.
                                    properties:
                                      key:
                                        description: |-
                                          Required. The key name of Metadata to retrieve the Struct from the metadata.
                                          Typically, it represents a builtin subsystem or custom extension.
                                        type: string
                                      path:
                                        description: |-
                                          Must have at least one element. The path to retrieve the Value from the Struct. It can be a prefix or a full path,
                                          e.g. ``[prop, xyz]`` for a struct or ``[prop, foo]`` for a string in the example,
                                          which depends on the particular scenario.

                                          Note: Due to that only the key type segment is supported, the path can not specify a list
                                          unless the list is the last segment.
                                        items:
                                          oneOf:
                                          - not:
                                              anyOf:
                                              - required:
                                                - key
                                          - required:
                                            - key
                                          properties:
                                            key:
                                              description: Required. If specified,
                                                use the key to retrieve the value
                                                in a Struct.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  source:
                                    description: Source of metadata
                                    enum:
                                    - DYNAMIC
                                    - ROUTE_ENTRY
                                    type: string
                                type: object
                              remoteAddress:
                                description: Rate limit on remote address.
                                type: object
                              requestHeaders:
                                description: Rate limit on request headers.
                                properties:
                                  descriptorKey:
                                    description: The key to use in the descriptor
                                      entry.
                                    type: string
                                  headerName:
                                    description: |-
                                      The header name to be queried from the request headers. The header’s
                                      value is used to populate the value of the descriptor entry for the
                                      descriptor_key.
                                    type: string
                                type: object
                              sourceCluster:
                                description: Rate limit on source cluster.
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: The current status of the `RateLimitClientConfig`.
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the RateLimitClientConfig metadata.
                  If the `observedGeneration` does not match `metadata.generation`,
                  Gloo Mesh has not processed the most recent version of this resource.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: c7a958e4048a9693
    crd.solo.io/version: 2.0.0
  labels:
    app: gloo-mesh-crds
    app.kubernetes.io/name: gloo-mesh-crds
  name: transformationpolicies.trafficcontrol.policy.gloo.solo.io
spec:
  group: trafficcontrol.policy.gloo.solo.io
  names:
    kind: TransformationPolicy
    listKind: TransformationPolicyList
    plural: transformationpolicies
    singular: transformationpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              TransformationPolicy is used to transform HTTP requests and responses matching selected routes.
              TransformationPolicies are applied at the *Route* level.
            properties:
              applyToRoutes:
                description: |-
                  select the routes where the policy will be applied
                  if left empty, will apply to all routes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - route
                      - required:
                        - withDestinations
                  - required:
                    - route
                  - required:
                    - withDestinations
                  properties:
                    route:
                      description: |-
                        select routes based on their labels.
                        these labels can be used to match route tables or individual routes within route tables.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                    withDestinations:
                      description: |-
                        select routes with `forwardTo` actions based on their destinations.
                        this can be used apply policy to routes regardless of
                        their labels
                      properties:
                        kind:
                          description: the kind of destination being selected. defaults
                            to Kubernetes Service.
                          enum:
                          - SERVICE
                          - VIRTUAL_DESTINATION
                          - EXTERNAL_SERVICE
                          type: string
                        port:
                          description: |-
                            the port on the Destination which receives traffic.
                            Not required if the Destination only exposes a single port.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: selector used to match destination objects
                            by their metadata
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the transformation policy to apply to
                  the selected routes.
                properties:
                  appendRequestHeaders:
                    additionalProperties:
                      type: string
                    description: Additional HTTP headers to add before forwarding
                      a request to the destination service.
                    type: object
                  appendResponseHeaders:
                    additionalProperties:
                      type: string
                    description: Additional HTTP headers to add before returning a
                      response to the caller.
                    type: object
                  removeRequestHeaders:
                    description: HTTP headers to remove before forwarding a request
                      to the destination service.
                    items:
                      type: string
                    type: array
                  removeResponseHeaders:
                    description: HTTP headers to remove before returning a response
                      to the caller.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: reflects the status of the TransformationPolicy
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the object's metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this object.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
